apply from: 'gradle/scripts/helpers.gradle'

repositories {
    // Other repositories described by default:
    // CleanroomMC: https://maven.cleanroommc.com
    maven {
        name 'CurseMaven'
        url 'https://curse.cleanroommc.com'
    }
    maven {
        name 'Modrinth'
        url 'https://api.modrinth.com/maven'
    }
    mavenLocal() // Must be last for caching to work
}

dependencies {
    compileOnly "com.cleanroommc:sponge-mixin:0.20.10+mixin.0.8.7"
    if (propertyBool('enable_lwjglx')) {
        compileOnly "com.cleanroommc:lwjglx:1.0.0"
    }
    implementation("org.lwjgl:lwjgl-jawt:3.3.3") {
        exclude group: "org.lwjgl", module: "lwjgl"
    }
    compileOnly 'org.jetbrains:annotations:24.0.0'
    implementation('org.joml:joml:1.10.5')
    shadow('org.joml:joml:1.10.5')

    implementation('org.lz4:lz4-java:1.8.0')
    shadow('org.lz4:lz4-java:1.8.0')
    implementation('org.tukaani:xz:1.9')
    shadow('org.tukaani:xz:1.9')

    implementation('org.xerial:sqlite-jdbc:3.47.2.0')
    shadow('org.xerial:sqlite-jdbc:3.47.2.0')

    implementation('com.electronwill.night-config:toml:3.6.6')
    shadow('com.electronwill.night-config:toml:3.6.6')
    implementation('com.electronwill.night-config:json:3.6.6')
    shadow('com.electronwill.night-config:json:3.6.6')

    implementation("com.github.luben:zstd-jni:1.5.7-4")
    shadow("com.github.luben:zstd-jni:1.5.7-4")
    
    modCompileOnly('curse.maven:quark-243121:2924091')
    modCompileOnly('curse.maven:mistyworld-271013:3155036')
    
    modCompileOnly('curse.maven:codechicken-lib-cre-1328922:6898525')
    modCompileOnly('curse.maven:redstone-flux-270789:2920436')
    modCompileOnly('curse.maven:cofh-core-69162:2920433')
    modCompileOnly('curse.maven:cofh-world-271384:2920434')
    modCompileOnly('curse.maven:thermal-foundation-222880:2926428')
    modCompileOnly('curse.maven:thermal-expansion-69163:2926431')
    modCompileOnly('curse.maven:thermal-dynamics-227443:2920505')
    // Example - Dependency descriptor:
    // 'com.google.code.gson:gson:2.8.6' << group: com.google.code.gson, name:gson, version:2.8.6
    // 'group:name:version:classifier' where classifier is optional

    // Example - Deobfuscating dependencies:
    // rfg.deobf('curse.maven:had-enough-items-557549:4543375')
    // By wrapping a dependency descriptor in rfg.deobf() method call, the dependency is queued for deobfuscation
    // When deobfuscating, RFG respects the mapping_channel + mapping_version stated in gradle.properties

    // Example - CurseMaven dependencies:
    // 'curse.maven:had-enough-items-557549:4543375' << had-enough-items = project slug, 557549 = project id, 4543375 = file id
    // Full documentation: https://cursemaven.com/

    // Example - Modrinth dependencies:
    // 'maven.modrinth:jei:4.16.1.1000' << jei = project name, 4.16.1.1000 = file version
    // Full documentation: https://docs.modrinth.com/docs/tutorials/maven/

    // Common dependency types (configuration):
    // implementation = dependency available at both compile time and runtime
    // runtimeOnly = runtime dependency
    // compileOnly = compile time dependency
    // annotationProcessor = annotation processing dependencies
    // contain = bundle dependency jars into final artifact, will extract them in mod loading. Please only do this to non-mod dependencies.
    // shadow = bundle dependencies into shadow output artifact (relocation configurable in shadowJar task)

    // Transitive dependencies:
    // (Dependencies that your dependency depends on)
    // If you wish to exclude transitive dependencies in the described dependencies
    // Use a closure as such:
    // implementation ('com.google.code.gson:gson:2.8.6') {
    //     transitive = false
    // }
}
